{
  "info": {
    "name": "API Security Fintech Collection",
    "description": "End-to-end flows for authentication, account management, and transaction processing.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "authBaseUrl",
      "value": "http://localhost:8001"
    },
    {
      "key": "accountBaseUrl",
      "value": "http://localhost:8002"
    },
    {
      "key": "transactionBaseUrl",
      "value": "http://localhost:8003"
    },
    {
      "key": "clientId",
      "value": "web-portal"
    },
    {
      "key": "clientSecret",
      "value": "change-me"
    },
    {
      "key": "username",
      "value": "analyst@example.com"
    },
    {
      "key": "password",
      "value": "P@ssw0rd!"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Obtain OAuth Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "grant_type",
                  "value": "password"
                },
                {
                  "key": "client_id",
                  "value": "{{clientId}}"
                },
                {
                  "key": "client_secret",
                  "value": "{{clientSecret}}"
                },
                {
                  "key": "username",
                  "value": "{{username}}"
                },
                {
                  "key": "password",
                  "value": "{{password}}"
                },
                {
                  "key": "scope",
                  "value": "accounts:read accounts:write transactions:read transactions:write"
                }
              ]
            },
            "url": {
              "raw": "{{authBaseUrl}}/auth/token",
              "host": [
                "{{authBaseUrl}}"
              ],
              "path": [
                "auth",
                "token"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Token issued successfully', function () {",
                  "  pm.response.to.have.status(200);",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('access_token');",
                  "  pm.collectionVariables.set('accessToken', json.access_token);",
                  "  pm.collectionVariables.set('refreshToken', json.refresh_token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Accounts",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "const token = pm.collectionVariables.get('accessToken');",
              "pm.request.headers.upsert({ key: 'Authorization', value: 'Bearer ' + token });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "item": [
        {
          "name": "List Accounts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{accountBaseUrl}}/accounts",
              "host": [
                "{{accountBaseUrl}}"
              ],
              "path": [
                "accounts"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Accounts retrieved', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Create Account",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"user_id\": 1,\n  \"account_number\": \"ACCT-00001\",\n  \"account_type\": \"checking\",\n  \"balance\": 0,\n  \"currency\": \"USD\"\n}"
            },
            "url": {
              "raw": "{{accountBaseUrl}}/accounts",
              "host": [
                "{{accountBaseUrl}}"
              ],
              "path": [
                "accounts"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Account created', function () {",
                  "  pm.response.to.have.status(201);",
                  "  var json = pm.response.json();",
                  "  pm.collectionVariables.set('accountId', json.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Account",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{accountBaseUrl}}/accounts/{{accountId}}",
              "host": [
                "{{accountBaseUrl}}"
              ],
              "path": [
                "accounts",
                "{{accountId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Account detail available', function () {",
                  "  pm.response.to.have.status(200);",
                  "  var json = pm.response.json();",
                  "  pm.expect(json.id).to.eql(pm.collectionVariables.get('accountId'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Transactions",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "const token = pm.collectionVariables.get('accessToken');",
              "pm.request.headers.upsert({ key: 'Authorization', value: 'Bearer ' + token });"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "item": [
        {
          "name": "Create Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"account_id\": {{accountId}},\n  \"user_id\": 1,\n  \"amount\": 19.95,\n  \"currency\": \"USD\",\n  \"direction\": \"debit\",\n  \"description\": \"Card 4111111111111111\"\n}"
            },
            "url": {
              "raw": "{{transactionBaseUrl}}/transactions",
              "host": [
                "{{transactionBaseUrl}}"
              ],
              "path": [
                "transactions"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Transaction created', function () {",
                  "  pm.response.to.have.status(201);",
                  "  var json = pm.response.json();",
                  "  pm.collectionVariables.set('transactionId', json.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Get Transaction",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{transactionBaseUrl}}/transactions/{{transactionId}}",
              "host": [
                "{{transactionBaseUrl}}"
              ],
              "path": [
                "transactions",
                "{{transactionId}}"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Transaction retrieved', function () {",
                  "  pm.response.to.have.status(200);",
                  "  var json = pm.response.json();",
                  "  pm.expect(json.id).to.eql(pm.collectionVariables.get('transactionId'));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "List Transactions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{transactionBaseUrl}}/transactions",
              "host": [
                "{{transactionBaseUrl}}"
              ],
              "path": [
                "transactions"
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Transactions listed', function () {",
                  "  pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ]
        }
      ]
    }
  ]
}
